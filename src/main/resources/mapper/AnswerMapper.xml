<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.codesky.forcoder.dao.AnswerMapper">
    <resultMap id="BaseResultMap" type="top.codesky.forcoder.model.entity.Answer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="comment_count" javaType="int" jdbcType="INTEGER"/>
            <arg column="voteup_count" javaType="int" jdbcType="INTEGER"/>
            <arg column="is_anonymously" javaType="boolean" jdbcType="BIT"/>
            <arg column="author_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="question_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="top.codesky.forcoder.model.entity.Answer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="comment_count" javaType="_int" jdbcType="INTEGER"/>
            <arg column="voteup_count" javaType="_int" jdbcType="INTEGER"/>
            <arg column="is_anonymously" javaType="_boolean" jdbcType="BIT"/>
            <arg column="author_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="question_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
            <arg column="excerpt" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        id, comment_count, voteup_count, is_anonymously, author_id, question_id, gmt_create,
        gmt_modified
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        content, excerpt
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from answer
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        delete from answer
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="top.codesky.forcoder.model.entity.Answer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into answer (comment_count, voteup_count, is_anonymously,
        author_id, question_id, gmt_create,
        gmt_modified, content, excerpt
        )
        values (#{commentCount,jdbcType=INTEGER}, #{voteupCount,jdbcType=INTEGER}, #{anonymously,jdbcType=BIT},
        #{authorId,jdbcType=BIGINT}, #{questionId,jdbcType=BIGINT}, #{gmtCreated,jdbcType=TIMESTAMP},
        #{gmtModified,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}, #{excerpt,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="top.codesky.forcoder.model.entity.Answer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into answer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            comment_count,
            voteup_count,
            is_anonymously,
            <if test="authorId != null">
                author_id,
            </if>
            <if test="questionId != null">
                question_id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="excerpt != null">
                excerpt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{commentCount,jdbcType=INTEGER},
            #{voteupCount,jdbcType=INTEGER},
            #{anonymously,jdbcType=BIT},
            <if test="authorId != null">
                #{authorId,jdbcType=BIGINT},
            </if>
            <if test="questionId != null">
                #{questionId,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="excerpt != null">
                #{excerpt,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.codesky.forcoder.model.entity.Answer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        update answer
        <set>
            <if test="commentCount != null">
                comment_count = #{commentCount,jdbcType=INTEGER},
            </if>
            <if test="voteupCount != null">
                voteup_count = #{voteupCount,jdbcType=INTEGER},
            </if>
            <if test="anonymously != null">
                is_anonymously = #{anonymously,jdbcType=BIT},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=BIGINT},
            </if>
            <if test="questionId != null">
                question_id = #{questionId,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="excerpt != null">
                excerpt = #{excerpt,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="top.codesky.forcoder.model.entity.Answer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        update answer
        set comment_count = #{commentCount,jdbcType=INTEGER},
        voteup_count = #{voteupCount,jdbcType=INTEGER},
        is_anonymously = #{anonymously,jdbcType=BIT},
        author_id = #{authorId,jdbcType=BIGINT},
        question_id = #{questionId,jdbcType=BIGINT},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=LONGVARCHAR},
        excerpt = #{excerpt,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.codesky.forcoder.model.entity.Answer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-05-05 11:28:05.
        -->
        update answer
        set comment_count = #{commentCount,jdbcType=INTEGER},
        voteup_count = #{voteupCount,jdbcType=INTEGER},
        is_anonymously = #{anonymously,jdbcType=BIT},
        author_id = #{authorId,jdbcType=BIGINT},
        question_id = #{questionId,jdbcType=BIGINT},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 获取问题的相关回答 默认8条 -->
    <select id="selectAnswersByQuestionId" parameterType="Long" resultMap="answerDetailsResultMap">
        select answer.id           as answer_id,
               content,
               excerpt,
               comment_count,
               voteup_count,
               is_anonymously,
               answer.gmt_create   as answer_gmt_create,
               answer.gmt_modified as answer_gmt_modified,
               user.user_id        as author_id,
               username,
               gender,
               avatar_url,
               headline,
               business,
               user.gmt_create     as user_gmt_create,
               user.gmt_modified   as user_gmt_modified
        from answer
                 left outer join user_addition_info as user on answer.author_id = user.user_id
        where answer.question_id = #{id,jdbcType=BIGINT}
        order by answer.gmt_modified desc
        limit 0,8
    </select>

    <resultMap id="answerDetailsResultMap" type="AnswerDetailsVO">
        <id column="answer_id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="content" property="content" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
        <result column="excerpt" property="excerpt" javaType="java.lang.String" jdbcType="LONGVARCHAR"/>
        <result column="comment_count" property="commentCount" javaType="int" jdbcType="INTEGER"/>
        <result column="voteup_count" property="voteupCount" javaType="int" jdbcType="INTEGER"/>
        <result column="is_anonymously" property="anonymously" javaType="boolean" jdbcType="BIT"/>
        <result column="answer_gmt_create" property="gmtCreate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="answer_gmt_modified" property="gmtModified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <association property="author" javaType="PublicationsOfMemberVO">
            <id column="author_id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <result column="username" property="username" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result column="gender" property="gender" javaType="_short" jdbcType="TINYINT"/>
            <result column="avatar_url" property="avatarUrl" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result column="headline" property="headline" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result column="business" property="business" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <result column="user_gmt_create" property="gmtCreate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <result column="user_gmt_modified" property="gmtModified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </association>
    </resultMap>


    <!--  查询最新的一条回答作为首页问答返回记录  -->
    <select id="selectAnswerByQuestionId" parameterType="long" resultMap="answerDetailsResultMap">
        select a.id              as answer_id,
               content,
               excerpt,
               comment_count,
               voteup_count,
               is_anonymously,
               a.gmt_create      as answer_gmt_create,
               a.gmt_modified    as answer_gmt_modified,
               user.user_id      as author_id,
               username,
               gender,
               avatar_url,
               headline,
               business,
               user.gmt_create   as user_gmt_create,
               user.gmt_modified as user_gmt_modified
        from answer a
                 left outer join user_addition_info as user on a.author_id = user.user_id,
             (select id from answer where question_id = #{id,jdbcType=BIGINT} ORDER BY gmt_modified desc limit 1) b
        where a.id = b.id;
    </select>


    <!--  查询用户是否已经回答，即存在一条记录  -->
    <select id="countUserAnswerByQuestionId" parameterType="AnswerCountQuery" resultType="int">
        select count(*)
        from answer
        where question_id = #{questionId,jdbcType=BIGINT}
          and author_id = #{authorId,jdbcType=BIGINT}
    </select>

    <!--  查询回答详细信息，包含答题者的信息  -->
    <select id="selectAnswerByAnswerId" resultMap="answerDetailsResultMap">
        select answer.id           as answer_id,
               content,
               excerpt,
               comment_count,
               voteup_count,
               is_anonymously,
               answer.gmt_create   as answer_gmt_create,
               answer.gmt_modified as answer_gmt_modified,
               user.user_id        as author_id,
               username,
               gender,
               avatar_url,
               headline,
               business,
               user.gmt_create     as user_gmt_create,
               user.gmt_modified   as user_gmt_modified
        from answer
                 left outer join user_addition_info as user on answer.author_id = user.user_id
        where answer.id = #{authorId,jdbcType=BIGINT};
    </select>


    <!--  统计答案数量，判断答案是否存在  -->
    <select id="countAnswerByAnswerId" parameterType="long" resultType="int">
        select count(*)
        from answer
        where id = #{id,jdbcType=BIGINT};
    </select>

</mapper>