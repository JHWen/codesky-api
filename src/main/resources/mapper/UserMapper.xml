<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.codesky.forcoder.dao.UserMapper">
    <resultMap id="BaseResultMap" type="top.codesky.forcoder.model.entity.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-04-24 18:03:44.
        -->
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="gender" javaType="_short" jdbcType="TINYINT"/>
            <arg column="avatar_url" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="is_account_non_expired" javaType="_boolean" jdbcType="BIT"/>
            <arg column="is_account_non_locked" javaType="_boolean" jdbcType="BIT"/>
            <arg column="is_credentials_non_expired" javaType="_boolean" jdbcType="BIT"/>
            <arg column="is_enabled" javaType="_boolean" jdbcType="BIT"/>
            <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-04-24 18:03:44.
        -->
        id, username, password, gender, avatar_url, is_account_non_expired, is_account_non_locked,
        is_credentials_non_expired, is_enabled, gmt_create, gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-04-24 18:03:44.
        -->
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-04-24 18:03:44.
        -->
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="top.codesky.forcoder.model.entity.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-04-24 18:03:44.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (username, password, gender,
        avatar_url, is_account_non_expired, is_account_non_locked,
        is_credentials_non_expired, is_enabled, gmt_create,
        gmt_modified)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT},
        #{avatarUrl,jdbcType=VARCHAR}, #{accountNonExpired,jdbcType=BIT}, #{accountNonLocked,jdbcType=BIT},
        #{credentialsNonExpired,jdbcType=BIT}, #{enabled,jdbcType=BIT}, #{gmtCreate,jdbcType=TIMESTAMP},
        #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="top.codesky.forcoder.model.entity.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-04-24 18:03:44.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            gender,
            <if test="avatarUrl != null">
                avatar_url,
            </if>
            <if test="accountNonExpired != null">
                is_account_non_expired,
            </if>
            <if test="accountNonLocked != null">
                is_account_non_locked,
            </if>
            <if test="credentialsNonExpired != null">
                is_credentials_non_expired,
            </if>
            <if test="enabled != null">
                is_enabled,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            #{gender,jdbcType=TINYINT},
            <if test="avatarUrl != null">
                #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="accountNonExpired != null">
                #{accountNonExpired,jdbcType=BIT},
            </if>
            <if test="accountNonLocked != null">
                #{accountNonLocked,jdbcType=BIT},
            </if>
            <if test="credentialsNonExpired != null">
                #{credentialsNonExpired,jdbcType=BIT},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.codesky.forcoder.model.entity.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-04-24 18:03:44.
        -->
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=TINYINT},
            </if>
            <if test="avatarUrl != null">
                avatar_url = #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="accountNonExpired != null">
                is_account_non_expired = #{accountNonExpired,jdbcType=BIT},
            </if>
            <if test="accountNonLocked != null">
                is_account_non_locked = #{accountNonLocked,jdbcType=BIT},
            </if>
            <if test="credentialsNonExpired != null">
                is_credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
            </if>
            <if test="enabled != null">
                is_enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.codesky.forcoder.model.entity.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on 2019-04-24 18:03:44.
        -->
        update user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=TINYINT},
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
        is_account_non_expired = #{accountNonExpired,jdbcType=BIT},
        is_account_non_locked = #{accountNonLocked,jdbcType=BIT},
        is_credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
        is_enabled = #{enabled,jdbcType=BIT},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="findByUsername" parameterType="string" resultMap="detailedUserResultMap">
        SELECT `user`.id                         AS user_id,
               `user`.username                   AS username,
               `user`.`password`                 AS `password`,
               `user`.is_account_non_expired     AS is_account_non_expired,
               `user`.is_account_non_locked      AS is_account_non_locked,
               `user`.is_credentials_non_expired AS is_credentials_non_expired,
               `user`.is_enabled                 AS is_enabled,
               user_role.role_id                 AS role_id,
               role.role_name                    AS role_name
        FROM `user`
                 LEFT OUTER JOIN user_role ON `user`.id = user_role.user_id
                 LEFT OUTER JOIN role ON user_role.role_id = role.id
        WHERE `user`.username = #{username};
    </select>

    <!--  根据userId，查询用户公开信息  -->
    <select id="selectPublicationsOfMemberById" parameterType="long" resultType="PublicationsOfMember">
        SELECT `user`.username   AS username,
               `user`.avatar_url AS avatarUrl
        FROM `user`
        WHERE id = #{id,jdbcType=BIGINT};
    </select>

    <!--  根据username，查询用户公开信息  -->
    <select id="selectPublicationsOfMemberByUsername" parameterType="String" resultType="PublicationsOfMember">
        SELECT `user`.username   AS username,
               `user`.avatar_url AS avatarUrl
        FROM `user`
        WHERE username = #{username,jdbcType=VARCHAR};
    </select>

    <resultMap id="detailedUserResultMap" type="UserForAuthentication">
        <id column="user_id" javaType="Long" jdbcType="BIGINT" property="id"/>
        <result column="username" javaType="java.lang.String" jdbcType="VARCHAR" property="username"/>
        <result column="password" javaType="java.lang.String" jdbcType="VARCHAR" property="password"/>
        <result column="is_account_non_expired" javaType="_boolean" jdbcType="BIT" property="accountNonExpired"/>
        <result column="is_account_non_locked" javaType="_boolean" jdbcType="BIT" property="accountNonLocked"/>
        <result column="is_credentials_non_expired" javaType="_boolean" jdbcType="BIT"
                property="credentialsNonExpired"/>
        <result column="is_enabled" javaType="_boolean" jdbcType="BIT" property="enabled"/>
        <collection ofType="RoleForAuthentication" property="roles">
            <id column="id" javaType="Long" jdbcType="BIGINT" property="id"/>
            <result column="role_name" property="roleName"/>
        </collection>
    </resultMap>

</mapper>